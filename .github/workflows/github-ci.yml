name: Create RPM Release

on:
  push:
    branches:
      - test

env:
  OWNER_GITHUB: "user_name"                      # User name. For example: [user_name] in https://github.com/user_name/your_repository.git
  RPM_ARTIFACT_DIR: "cxx_rpm"                    # Directory name of Artifact to contain rpm files temporary. Default is "cxx_rpm".
  INFLUXDB_CXX_RELEASE_VERSION: "0.0.1"
  RPM_DISTRIBUTION_TYPE: "rhel8"

jobs:
  # Job 1: ...
  project_build:
    runs-on: ubuntu-latest
    container:
      image: docker:24.0.5
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock

    env:
      IMAGE_TAG: "cxx_build"
      DOCKERFILE: "Dockerfile_rpm"

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Before scripts
      run: |
        apk add wget

    - name: Build RPM
      run: |
        echo "Building RPM ....."
        docker build -t $IMAGE_TAG \
          --build-arg DISTRIBUTION_TYPE=$RPM_DISTRIBUTION_TYPE \
          --build-arg INFLUXDB_CXX_RELEASE_VERSION=$INFLUXDB_CXX_RELEASE_VERSION \
          -f $DOCKERFILE .

    - name: Copy RPM Artifact
      run: |
        mkdir -p ${{ env.RPM_ARTIFACT_DIR }}
        docker run -d --name test $IMAGE_TAG /usr/sbin/init
        docker cp test:/home/user1/rpmbuild/RPMS/x86_64 ${{ env.RPM_ARTIFACT_DIR }}

    - name: Clean up
      run: |
        docker rm $(docker stop test)
        docker rmi $IMAGE_TAG
        cp ${{ env.RPM_ARTIFACT_DIR }}/x86_64/* ${{ env.RPM_ARTIFACT_DIR }}
        rm -rf ${{ env.RPM_ARTIFACT_DIR }}/x86_64/

    - name: Upload RPM Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.RPM_ARTIFACT_DIR }}
        path: '${{ github.workspace }}/${{ env.RPM_ARTIFACT_DIR }}'

  # Job 2: ...
  project_publish:
    needs: project_build
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install curl
      run: sudo apt-get update -qq && sudo apt-get install -y -qq curl

    # Create release. After this step, source code is published.
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.INFLUXDB_CXX_RELEASE_VERSION }}
        release_name: Release ${{ env.INFLUXDB_CXX_RELEASE_VERSION }}
        draft: false
        prerelease: false

    # Download rpm files from Artifact
    - name: Download RPM Artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.RPM_ARTIFACT_DIR }}

    # Upload rpm files to release that is created in previous step
    - name: Upload rpm
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./influxdb-cxx-${{ env.INFLUXDB_CXX_RELEASE_VERSION }}-${{ env.RPM_DISTRIBUTION_TYPE }}.x86_64.rpm
        asset_name: influxdb-cxx-${{ env.INFLUXDB_CXX_RELEASE_VERSION }}-${{ env.RPM_DISTRIBUTION_TYPE }}.x86_64.rpm
        asset_content_type: application/octet-stream
